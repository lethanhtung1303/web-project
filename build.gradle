plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
}

group = 'com.tdtu'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.security:spring-security-crypto:6.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jersey'
    implementation 'io.swagger:swagger-annotations:1.6.6'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
    implementation 'org.jetbrains:annotations:23.0.0'
    implementation 'org.apache.commons:commons-lang3'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'com.itfsw:mybatis-generator-plugin:1.3.10'
    implementation 'org.mybatis.generator:mybatis-generator-core:1.4.0'
    implementation 'com.oracle.database.jdbc:ojdbc8:19.13.0.0.1'
    implementation 'com.softwareloop:mybatis-generator-lombok-plugin:1.0'
    implementation 'com.h2database:h2:2.1.214'
    implementation project(":apispecs")
    implementation project(":mbGenerator")
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    if (project.hasProperty('buildProfile') && project.buildProfile.equalsIgnoreCase('dev')) {
        println project.buildProfile
        archiveFileName = "${archiveBaseName.get()}-${project.version}-dev.${archiveExtension.get()}"
    } else {
        println 'No buildProfile'
        archiveFileName = "${archiveBaseName.get()}-${project.version}.${archiveExtension.get()}"
    }
}

bootRun.doFirst {
    delete "${rootDir}/bin/"
    delete "${rootDir}/apispecs/bin/"
    delete "${rootDir}/mbGenerator/bin/"
}
